# Generated by Django 5.2 on 2025-04-14 08:09

import api.storages_backends
import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.CharField(max_length=255)),
                ('log_id', models.IntegerField(blank=True, null=True)),
                ('incident_id', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='WTT_Log_Inspect_Items',
            fields=[
                ('itemID', models.AutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'WTT_Log_Inspect_Items',
            },
        ),
        migrations.CreateModel(
            name='WTT_Trailer',
            fields=[
                ('trailerID', models.IntegerField(primary_key=True, serialize=False)),
                ('make_model', models.CharField(max_length=60)),
                ('license_plate', models.CharField(max_length=8)),
                ('carrier', models.CharField(max_length=60)),
                ('jurisdiction', models.CharField(max_length=60)),
                ('in_service', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'WTT_Trailer',
            },
        ),
        migrations.CreateModel(
            name='WTT_Truck',
            fields=[
                ('truckID', models.IntegerField(primary_key=True, serialize=False)),
                ('make_model', models.CharField(max_length=60)),
                ('license_plate', models.CharField(max_length=8)),
                ('odometer', models.IntegerField()),
                ('carrier', models.CharField(max_length=60)),
                ('jurisdiction', models.CharField(max_length=60)),
                ('in_service', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'WTT_Truck',
            },
        ),
        migrations.CreateModel(
            name='WTT_User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('employeeID', models.CharField(max_length=6, unique=True)),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('address', models.CharField(max_length=128)),
                ('driver_license', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'WTT_User',
            },
        ),
        migrations.CreateModel(
            name='WTT_Log',
            fields=[
                ('logID', models.AutoField(primary_key=True, serialize=False)),
                ('trip', models.IntegerField()),
                ('location', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('load', models.IntegerField(null=True)),
                ('height', models.IntegerField(null=True)),
                ('defects_en_route', models.CharField(max_length=1000, null=True)),
                ('incidents', models.CharField(max_length=1000, null=True)),
                ('remarks', models.CharField(max_length=1000, null=True)),
                ('declaration', models.IntegerField()),
                ('signature', models.CharField(max_length=100)),
                ('employee', models.ForeignKey(db_column='employeeID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='employeeID')),
                ('trailer', models.ForeignKey(blank=True, db_column='trailerID', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.wtt_trailer')),
                ('truck', models.ForeignKey(db_column='truckID', on_delete=django.db.models.deletion.CASCADE, to='api.wtt_truck')),
            ],
            options={
                'db_table': 'WTT_Log',
            },
        ),
        migrations.CreateModel(
            name='WTT_Log_Inspect_Det',
            fields=[
                ('detailID', models.AutoField(primary_key=True, serialize=False)),
                ('logID', models.ForeignKey(db_column='logID', on_delete=django.db.models.deletion.CASCADE, to='api.wtt_log')),
                ('itemID', models.ForeignKey(db_column='itemID', on_delete=django.db.models.deletion.CASCADE, to='api.wtt_log_inspect_items')),
            ],
            options={
                'db_table': 'WTT_Log_Inspect_Det',
            },
        ),
        migrations.CreateModel(
            name='WTT_Log_Pictures',
            fields=[
                ('logpicID', models.AutoField(primary_key=True, serialize=False)),
                ('picture', models.ImageField(storage=api.storages_backends.MediaStorage(), upload_to='log_images/')),
                ('logID', models.ForeignKey(db_column='logID', on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='api.wtt_log')),
            ],
            options={
                'db_table': 'WTT_Log_Pictures',
            },
        ),
        migrations.CreateModel(
            name='WTT_Srs_Incident',
            fields=[
                ('incidentID', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('summary', models.CharField(max_length=1000, null=True)),
                ('employee', models.ForeignKey(db_column='employeeID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, to_field='employeeID')),
                ('trailer', models.ForeignKey(blank=True, db_column='trailerID', null=True, on_delete=django.db.models.deletion.CASCADE, to='api.wtt_trailer')),
                ('truck', models.ForeignKey(db_column='truckID', on_delete=django.db.models.deletion.CASCADE, to='api.wtt_truck')),
            ],
            options={
                'db_table': 'WTT_Srs_Incident',
            },
        ),
        migrations.CreateModel(
            name='WTT_Srs_Inc_Pictures',
            fields=[
                ('srsincpicID', models.AutoField(primary_key=True, serialize=False)),
                ('picture', models.ImageField(storage=api.storages_backends.MediaStorage(), upload_to='srs_incidents_images/')),
                ('incidentID', models.ForeignKey(db_column='incidentID', on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='api.wtt_srs_incident')),
            ],
            options={
                'db_table': 'WTT_Srs_Inc_Pictures',
            },
        ),
    ]
